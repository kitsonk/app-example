(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    /**
     * A simple factory that creates an event object which can be cancelled
     * @param options The options for the event
     */
    function createCancelableEvent(options) {
        var type = options.type, target = options.target;
        var event = Object.defineProperties({}, {
            type: { value: type, enumerable: true },
            target: { value: target, enumerable: true },
            cancelable: { value: true, enumerable: true },
            defaultPrevented: { value: false, enumerable: true, configurable: true },
            preventDefault: { value: function () {
                    Object.defineProperty(event, 'defaultPrevented', { value: true, enumerable: true });
                }, enumerable: true }
        });
        return event;
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = createCancelableEvent;
});
//# sourceMappingURL=createCancelableEvent.js.map