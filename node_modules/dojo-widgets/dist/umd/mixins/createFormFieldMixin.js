(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", 'dojo-compose/mixins/createStateful', './createCachedRenderMixin'], factory);
    }
})(function (require, exports) {
    "use strict";
    var createStateful_1 = require('dojo-compose/mixins/createStateful');
    var createCachedRenderMixin_1 = require('./createCachedRenderMixin');
    var createFormMixin = createStateful_1.default
        .mixin(createCachedRenderMixin_1.default)
        .mixin({
        mixin: {
            get value() {
                var formfield = this;
                return formfield.state.value;
            },
            set value(value) {
                var formfield = this;
                if (value !== formfield.state.value) {
                    formfield.setState({ value: value });
                }
            }
        },
        initialize: function (instance, options) {
            if (options && options.type) {
                instance.type = options.type;
            }
        },
        aspectAdvice: {
            before: {
                getNodeAttributes: function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i - 0] = arguments[_i];
                    }
                    var formfield = this;
                    var overrides = args[0];
                    if (!overrides) {
                        args[0] = overrides = {};
                    }
                    if (formfield.type) {
                        overrides['type'] = formfield.type;
                    }
                    if (formfield.value) {
                        overrides.value = formfield.value;
                    }
                    if (formfield.state.name) {
                        overrides.name = formfield.state.name;
                    }
                    if (formfield.state.disabled) {
                        overrides['disabled'] = 'disabled';
                    }
                    return args;
                }
            }
        }
    });
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = createFormMixin;
});
//# sourceMappingURL=createFormFieldMixin.js.map