{"version":3,"file":"createContainer.js","sourceRoot":"","sources":["createContainer.ts"],"names":[],"mappings":";;;;;;;;;IACA,6BAAiE,gBAAgB,CAAC,CAAA;IAClF,kCAAsD,4BAA4B,CAAC,CAAA;IACnF,8CAA0C,wCAAwC,CAAC,CAAA;IAQnF,IAAM,eAAe,GAAqB,sBAAY;SACpD,KAAK,CAAC,2BAAiB,CAAC;SACxB,KAAK,CAAC,uCAA6B,CAAC;SACpC,MAAM,CAAC;QACP,OAAO,EAAE,gBAAgB;KACzB,CAAC,CAAC;IAEJ;sBAAe,eAAe,CAAC","sourcesContent":["import { ComposeFactory } from 'dojo-compose/compose';\nimport createWidget, { Widget, WidgetState, WidgetOptions } from './createWidget';\nimport createParentMixin, { ParentMixin, Child } from './mixins/createParentMixin';\nimport createRenderableChildrenMixin from './mixins/createRenderableChildrenMixin';\n\nexport interface ContainerOptions extends WidgetOptions<WidgetState> { }\n\nexport type Container = Widget<WidgetState> & ParentMixin<Child>;\n\nexport interface ContainerFactory extends ComposeFactory<Container, ContainerOptions> { }\n\nconst createContainer: ContainerFactory = createWidget\n\t.mixin(createParentMixin)\n\t.mixin(createRenderableChildrenMixin)\n\t.extend({\n\t\ttagName: 'dojo-container'\n\t});\n\nexport default createContainer;\n"]}