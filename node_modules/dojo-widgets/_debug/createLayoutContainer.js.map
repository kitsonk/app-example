{"version":3,"file":"createLayoutContainer.js","sourceRoot":"","sources":["createLayoutContainer.ts"],"names":[],"mappings":";;;;;;;;;IACA,6BAAiE,gBAAgB,CAAC,CAAA;IAClF,kCAA0E,4BAA4B,CAAC,CAAA;IACvG,8CAA0C,wCAAwC,CAAC,CAAA;IAQnF,IAAM,eAAe,GAA2B,sBAAY;SAC1D,KAAK,CAAC,2BAAiB,CAAC;SACxB,KAAK,CAAC,uCAA6B,CAAC;SACpC,MAAM,CAAC;QACP,OAAO,EAAE,uBAAuB;KAChC,CAAC,CAAC;IAEJ;sBAAe,eAAe,CAAC","sourcesContent":["import { ComposeFactory } from 'dojo-compose/compose';\nimport createWidget, { Widget, WidgetState, WidgetOptions } from './createWidget';\nimport createParentMixin, { ParentMixin, ParentMixinOptions, Child } from './mixins/createParentMixin';\nimport createRenderableChildrenMixin from './mixins/createRenderableChildrenMixin';\n\nexport interface LayoutContainerOptions extends WidgetOptions<WidgetState>, ParentMixinOptions<Child> { }\n\nexport type LayoutContainer = Widget<WidgetState> & ParentMixin<Child>;\n\nexport interface LayoutContainerFactory extends ComposeFactory<LayoutContainer, LayoutContainerOptions> { }\n\nconst createContainer: LayoutContainerFactory = createWidget\n\t.mixin(createParentMixin)\n\t.mixin(createRenderableChildrenMixin)\n\t.extend({\n\t\ttagName: 'dojo-container-layout'\n\t});\n\nexport default createContainer;\n"]}