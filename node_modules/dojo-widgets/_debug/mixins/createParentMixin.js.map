{"version":3,"file":"createParentMixin.js","sourceRoot":"","sources":["createParentMixin.ts"],"names":[],"mappings":"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","sourcesContent":["import { List } from 'immutable/immutable';\nimport compose, { ComposeFactory } from 'dojo-compose/compose';\nimport createDestroyable, { Destroyable } from 'dojo-compose/mixins/createDestroyable';\nimport { Handle } from 'dojo-core/interfaces';\nimport WeakMap from 'dojo-core/WeakMap';\nimport { Position, insertInList } from '../util/lang';\nimport { Renderable } from './createRenderable';\n\nexport interface ParentMixinOptions<C extends Child> {\n\t/**\n\t * Children that are owned by the parent on creation\n\t */\n\tchildren?: C[];\n}\n\nexport type Child = Renderable;\n\nexport interface Parent<C extends Child> {\n\t/**\n\t * An immutable list of children for this parent\n\t */\n\tchildren: List<C>;\n\n\t/**\n\t * Append a child (or children) to the parent\n\t * @param child The child to append\n\t */\n\tappend(child: C): Handle;\n\t/**\n\t * Append a child (or children) to the parent\n\t * @param children The children to append\n\t */\n\tappend(children: C[]): Handle;\n\n\t/**\n\t * Remove all children (but don't destory them)\n\t */\n\tclear(): void;\n\n\t/**\n\t * Insert a child in a specific position, providing the reference if required\n\t * @param child The child to insert\n\t * @param position The position to insert the child\n\t * @param reference The referencable child, if required\n\t */\n\tinsert(child: C, position: Position, reference?: C): Handle;\n}\n\nexport type ParentMixin<C extends Child> = Parent<C> & Destroyable;\n\nexport interface ParentMixinFactory extends ComposeFactory<ParentMixin<Child>, ParentMixinOptions<Child>> { }\n\nconst childrenMap = new WeakMap<ParentMixin<Child>, List<Child>>();\n\n/**\n * A utility function that generates a handle that destroys any children\n */\nfunction getRemoveHandle(parent: ParentMixin<Child>, child: Child | Child[]): Handle {\n\tfunction getDestroyHandle(c: Child): Handle {\n\t\tlet destroyed = false;\n\t\treturn c.own({\n\t\t\tdestroy() {\n\t\t\t\tif (destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst children = childrenMap.get(parent);\n\t\t\t\tconst idx = children.lastIndexOf(c);\n\t\t\t\tif (idx > -1) {\n\t\t\t\t\tchildrenMap.set(parent, children.delete(idx));\n\t\t\t\t}\n\t\t\t\tdestroyed = true;\n\t\t\t\tif (c.parent === parent) {\n\t\t\t\t\tc.parent = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (Array.isArray(child)) {\n\t\tlet destroyed = false;\n\t\tconst handles = child.map((c) => getDestroyHandle(c));\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tif (destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\tdestroyed = true;\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\tconst handle = getDestroyHandle(child);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n}\n\nconst createParentMixin: ParentMixinFactory = compose<Parent<Child>, ParentMixinOptions<Child>>({\n\t\tget children(): List<Child> {\n\t\t\treturn childrenMap.get(this);\n\t\t},\n\n\t\tappend(child: Child | Child[]): Handle {\n\t\t\tconst parent: ParentMixin<Child> = this;\n\t\t\tif (Array.isArray(child)) {\n\t\t\t\tchildrenMap.set(parent, <List<any>> childrenMap.get(parent).concat(child));\n\t\t\t\tchild.forEach((c) => c.parent = parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildrenMap.set(parent, childrenMap.get(parent).push(child));\n\t\t\t\tchild.parent = parent;\n\t\t\t}\n\t\t\treturn getRemoveHandle(parent, child);\n\t\t},\n\n\t\tclear(): void {\n\t\t\tconst parent: ParentMixin<Child> = this;\n\t\t\tconst children = childrenMap.get(parent);\n\t\t\tif (children) {\n\t\t\t\tchildren.forEach((child) => { child.parent === undefined; });\n\t\t\t\tchildrenMap.set(parent, List<Child>());\n\t\t\t}\n\t\t},\n\n\t\tinsert(child: Child, position: Position, reference?: Child): Handle {\n\t\t\tconst parent: ParentMixin<Child> = this;\n\t\t\tchildrenMap.set(parent, insertInList(childrenMap.get(parent), child, position, reference));\n\t\t\tchild.parent = parent;\n\t\t\treturn getRemoveHandle(parent, child);\n\t\t}\n\t})\n\t.mixin({\n\t\tmixin: createDestroyable,\n\t\tinitialize(instance, options) {\n\t\t\tchildrenMap.set(instance, List<any>());\n\t\t\tif (options && options.children && options.children.length) {\n\t\t\t\tinstance.own(instance.append(options.children));\n\t\t\t}\n\t\t\tinstance.own({\n\t\t\t\tdestroy() {\n\t\t\t\t\tconst children = childrenMap.get(instance);\n\t\t\t\t\tchildrenMap.set(instance, List<Child>());\n\t\t\t\t\tchildren.forEach((child) => child.destroy());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\nexport default createParentMixin;\n"]}