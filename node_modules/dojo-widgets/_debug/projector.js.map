{"version":3,"file":"projector.js","sourceRoot":"","sources":["projector.ts"],"names":[],"mappings":";;;;;;;;;IAAA,QAAO,uEAAuE,CAAC,CAAA,CAAC,mDAAmD;IACnI,yBAAsH,mBAAmB,CAAC,CAAA;IAC1I,wBAAwC,sBAAsB,CAAC,CAAA;IAE/D,uBAAmB,kBAAkB,CAAC,CAAA;IAEtC,qBAAuB,gBAAgB,CAAC,CAAA;IACxC,sBAA0B,iBAAiB,CAAC,CAAA;IAC5C,wBAAoB,mBAAmB,CAAC,CAAA;IACxC,mCAAiD,6BAA6B,CAAC,CAAA;IAC/E,kCAA0E,4BAA4B,CAAC,CAAA;IAEvG,gDAAgD;IAChD,gBAAM,CAAC,qBAAqB,GAAG,gBAAM,CAAC,qBAAqB,IAAI,gBAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;IAuFnG,WAAY,cAAc;QACzB,2DAAY,CAAA;QACZ,2DAAQ,CAAA;IACT,CAAC,EAHW,sBAAc,KAAd,sBAAc,QAGzB;IAHD,IAAY,cAAc,GAAd,sBAGX,CAAA;IAAA,CAAC;IAWF,IAAM,gBAAgB,GAAG,IAAI,iBAAO,EAA4B,CAAC;IAEjE,IAAM,UAAU,GAAG,EAAE,OAAO,gBAAK,CAAC,EAAE,CAAC;IACrC,IAAM,UAAU,GAAG,YAAC,CAAC,KAAK,CAAC,CAAC;IAC5B,IAAM,SAAS,GAAG,cAAoB,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAE9C,uBAAe,GAAqB,iBAAO,CAAmC;QACzF,iBAAiB,YAAC,SAA2B;YAC5C,4EAA4E;YAC5E,IAAM,SAAS,GAAc,IAAI,CAAC;YAClC,IAAM,KAAK,GAAoB,EAAE,CAAC;YAClC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC;YACD,IAAM,OAAO,GAAkC,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvB,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,OAAA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;YACrD,CAAC;YACD,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YACxB,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,aAAM,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACD,MAAM;YACL,IAAM,SAAS,GAAc,IAAI,CAAC;YAClC,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACtD,IAAM,WAAW,GAAY,EAAE,CAAC;YAChC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAhC,CAAgC,CAAC,CAAC;YACxE,MAAM,CAAC,YAAC,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,iBAAiB,EAAE,EAAE,WAAW,CAAC,CAAC;QAC7E,CAAC;QACD,MAAM,YAAC,MAAuB,EAAE,OAAuB;YAAhD,sBAAuB,GAAvB,cAAuB;YAAE,uBAAuB,GAAvB,eAAuB;YACtD,IAAM,SAAS,GAAc,IAAI,CAAC;YAClC,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrD,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;YACnC,CAAC;YACD,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7D,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;YAChC;;8CAEkC;YAClC,iBAAS,CAAC;gBACT,CAAC,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;YAC1H,CAAC,CAAC,CAAC;YACH,aAAa,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC;YAC9C,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC;gBAC1C,OAAO;oBACN,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACrD,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;wBAC/B,IAAI,CAAC;4BACJ,oDAAoD;4BACpD,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;wBAC3D,CACA;wBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACV,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,sCAAsC,CAAC,CAAC,CAAC;gCAC1D,MAAM,CAAC,CAAC;4BACT,CAAC;wBAEF,CAAC;wBACD;+DACuC;wBACvC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;wBACtC,aAAa,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC;oBAC/C,CAAC;oBACD,aAAa,CAAC,YAAY,GAAG,UAAU,CAAC;gBACzC,CAAC;aACD,CAAC,CAAC;YACH,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;QACnC,CAAC;QACD,UAAU;YACT,IAAM,SAAS,GAAc,IAAI,CAAC;YAClC,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrD,SAAS,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,gBAAgB;oBACtB,MAAM,EAAE,SAAS;iBACjB,CAAC,CAAC;gBACH,aAAa,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;YAC1C,CAAC;QACF,CAAC;QACD,OAAO,YAAC,IAAa;YACpB,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrD,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;YAC3E,CAAC;YACD,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,CAAC;QAED,IAAI,IAAI;YACP,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,MAAM,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC;QAC5C,CAAC;QAED,IAAI,SAAS;YACZ,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;QAC7C,CAAC;QAED,IAAI,QAAQ;YACX,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,MAAM,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;QAChF,CAAC;QAED,IAAI,KAAK;YACR,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,MAAM,CAAC,aAAa,IAAI,aAAa,CAAC,KAAK,CAAC;QAC7C,CAAC;KACD,CAAC;SACD,KAAK,CAAC;QACN,KAAK,EAAE,4BAAkB;QACzB,UAAU,YAAC,QAAQ;YAClB,0GAA0G;YAC1G,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,cAAa,CAAC,CAAC,CAAC;YACxC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,cAAa,CAAC,CAAC,CAAC;QAC1C,CAAC;KACD,CAAC;SACD,KAAK,CAAC;QACN,KAAK,EAAE,2BAAiB;QACxB,UAAU,YAAC,QAAQ,EAAE,OAAO;YAC3B,IAAM,SAAS,GAAG,0BAAuB,CAAC,EAAE,CAAC,CAAC;YAC9C,IAAM,IAAI,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC;YACtD,gBAAgB,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAC9B,WAAA,SAAS;gBACT,MAAA,IAAI;gBACJ,KAAK,EAAE,cAAc,CAAC,QAAQ;aAC9B,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnC,QAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC;QACF,CAAC;QACD,YAAY,EAAE;YACb,KAAK,EAAE;gBACN,KAAK;oBACJ,IAAM,SAAS,GAAc,IAAI,CAAC;oBAClC,SAAS,CAAC,UAAU,EAAE,CAAC;gBACxB,CAAC;aACD;SACD;KACD,CAAC,CAAC;IAEJ,IAAM,gBAAgB,GAAc,uBAAe,EAAE,CAAC;IAEtD;sBAAe,gBAAgB,CAAC","sourcesContent":["import './util/has!dom-requestanimationframe?:maquette/maquette-polyfills.min'; /* IE9/Node do not support RequestAnimationFrame */\nimport { h, createProjector as createMaquetteProjector, Projector as MaquetteProjector, VNode, VNodeProperties } from 'maquette/maquette';\nimport compose, { ComposeFactory } from 'dojo-compose/compose';\nimport { EventedOptions } from 'dojo-compose/mixins/createEvented';\nimport global from 'dojo-core/global';\nimport { Handle } from 'dojo-core/interfaces';\nimport { assign } from 'dojo-core/lang';\nimport { queueTask } from 'dojo-core/queue';\nimport WeakMap from 'dojo-core/WeakMap';\nimport createVNodeEvented, { VNodeEvented } from './mixins/createVNodeEvented';\nimport createParentMixin, { ParentMixin, ParentMixinOptions, Child } from './mixins/createParentMixin';\n\n/* maquette polyfills changed from 2.2 to 2.3 */\nglobal.requestAnimationFrame = global.requestAnimationFrame || global.window.requestAnimationFrame;\n\nexport interface ProjectorOptions extends ParentMixinOptions<Child>, EventedOptions {\n\t/**\n\t * The root element for the projector\n\t */\n\troot?: Element;\n\n\t/**\n\t * If `true`, automatically attach to the DOM during creation\n\t */\n\tautoAttach?: boolean;\n\n\t/**\n\t * If `true`, append instead of merge when attaching to the projector to the DOM\n\t *\n\t * Only applies if `autoAttach` is `true`\n\t */\n\tappend?: boolean;\n}\n\nexport interface ProjectorMixin {\n\t/**\n\t * Get the projector's VNode attributes\n\t */\n\tgetNodeAttributes(overrides?: VNodeProperties): VNodeProperties;\n\n\t/**\n\t * Returns a VNode which represents the DOM for the projector\n\t */\n\trender(): VNode;\n\n\t/**\n\t * Attach the projector to the DOM and return a handle to detach it.\n\t * @param append If `true`, it will append to the root instead of the default of merging\n\t * @param tagName If `append` is `true` then `tagName` will be used to determine what tag name\n\t *                is used to append to the root element. Defaults to `div`.\n\t */\n\tattach(append?: boolean, tagName?: string): Handle;\n\n\t/**\n\t * Inform the projector that it is in a dirty state and should re-render.  Calling event handles will automatically\n\t * schedule a re-render.\n\t */\n\tinvalidate(): void;\n\n\t/**\n\t * If unattached, set the root element for the projector.\n\t * @param root The Element that should serve as the root for the projector\n\t */\n\tsetRoot(root: Element): void;\n\n\t/**\n\t * The native maquette Projector that is being managed\n\t */\n\tprojector: MaquetteProjector;\n\n\t/**\n\t * The root of the projector\n\t */\n\troot: Element;\n\n\t/**\n\t * An array of classes that should be applied to the root of the projector\n\t */\n\tclasses?: string[];\n\n\t/**\n\t * A hash of inline styles that should be applied to the root of the projector\n\t */\n\tstyles?: { [style: string]: string; };\n\n\t/**\n\t * A reference to the document that the projector is attached to\n\t */\n\tdocument: Document;\n\n\t/**\n\t * The current state of the projector\n\t */\n\tstate: ProjectorState;\n}\n\nexport type Projector = VNodeEvented & ParentMixin<Child> & ProjectorMixin;\n\nexport interface ProjectorFactory extends ComposeFactory<Projector, ProjectorOptions> { }\n\nexport enum ProjectorState {\n\tAttached = 1,\n\tDetached\n};\n\ninterface ProjectorData {\n\tprojector?: MaquetteProjector;\n\troot?: Element;\n\tstate?: ProjectorState;\n\tattachHandle?: Handle;\n\tboundRender?: () => VNode;\n\ttagName?: string;\n}\n\nconst projectorDataMap = new WeakMap<Projector, ProjectorData>();\n\nconst noopHandle = { destroy() { } };\nconst emptyVNode = h('div');\nconst noopVNode = function(): VNode { return emptyVNode; };\n\nexport const createProjector: ProjectorFactory = compose<ProjectorMixin, ProjectorOptions>({\n\t\tgetNodeAttributes(overrides?: VNodeProperties): VNodeProperties {\n\t\t\t/* TODO: This is the same logic as createCachedRenderMixin, merge somehow */\n\t\t\tconst projector: Projector = this;\n\t\t\tconst props: VNodeProperties = {};\n\t\t\tfor (let key in projector.listeners) {\n\t\t\t\tprops[key] = projector.listeners[key];\n\t\t\t}\n\t\t\tconst classes: { [index: string]: boolean; } = {};\n\t\t\tif (projector.classes) {\n\t\t\t\tprojector.classes.forEach((c) => classes[c] = true);\n\t\t\t}\n\t\t\tprops.classes = classes;\n\t\t\tprops.styles = projector.styles || {};\n\t\t\tif (overrides) {\n\t\t\t\tassign(props, overrides);\n\t\t\t}\n\t\t\treturn props;\n\t\t},\n\t\trender(): VNode {\n\t\t\tconst projector: Projector = this;\n\t\t\tconst projectorData = projectorDataMap.get(projector);\n\t\t\tconst childVNodes: VNode[] = [];\n\t\t\tprojector.children.forEach((child) => childVNodes.push(child.render()));\n\t\t\treturn h(projectorData.tagName, projector.getNodeAttributes(), childVNodes);\n\t\t},\n\t\tattach(append: boolean = false, tagName: string = 'div'): Handle {\n\t\t\tconst projector: Projector = this;\n\t\t\tconst projectorData = projectorDataMap.get(projector);\n\t\t\tif (projectorData.state === ProjectorState.Attached) {\n\t\t\t\treturn projectorData.attachHandle;\n\t\t\t}\n\t\t\tprojectorData.boundRender = projector.render.bind(projector);\n\t\t\tprojectorData.tagName = tagName;\n\t\t\t/* attaching async, in order to help ensure that if there are any other async behaviours scheduled at the end of the\n\t\t\t * turn, they are executed before this, since the attachement is actually done in turn, but subsequent schedule\n\t\t\t * renders are done out of turn */\n\t\t\tqueueTask(() => {\n\t\t\t\t(append ? projectorData.projector.append : projectorData.projector.merge)(projectorData.root, projectorData.boundRender);\n\t\t\t});\n\t\t\tprojectorData.state = ProjectorState.Attached;\n\t\t\tprojectorData.attachHandle = projector.own({\n\t\t\t\tdestroy() {\n\t\t\t\t\tif (projectorData.state === ProjectorState.Attached) {\n\t\t\t\t\t\tprojectorData.projector.stop();\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t/* Sometimes Maquette can't seem to find function */\n\t\t\t\t\t\t\tprojectorData.projector.detach(projectorData.boundRender);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t\tif (e.message !== 'renderMaquetteFunction was not found') {\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* else, swallow */\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* for some reason, Maquette still trys to call this in some situations, so the noopVNode is\n\t\t\t\t\t\t * used to return an empty structure */\n\t\t\t\t\t\tprojectorData.boundRender = noopVNode;\n\t\t\t\t\t\tprojectorData.state = ProjectorState.Detached;\n\t\t\t\t\t}\n\t\t\t\t\tprojectorData.attachHandle = noopHandle;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn projectorData.attachHandle;\n\t\t},\n\t\tinvalidate(): void {\n\t\t\tconst projector: Projector = this;\n\t\t\tconst projectorData = projectorDataMap.get(projector);\n\t\t\tif (projectorData.state === ProjectorState.Attached) {\n\t\t\t\tprojector.emit({\n\t\t\t\t\ttype: 'schedulerender',\n\t\t\t\t\ttarget: projector\n\t\t\t\t});\n\t\t\t\tprojectorData.projector.scheduleRender();\n\t\t\t}\n\t\t},\n\t\tsetRoot(root: Element): void {\n\t\t\tconst projectorData = projectorDataMap.get(this);\n\t\t\tif (projectorData.state === ProjectorState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change root element');\n\t\t\t}\n\t\t\tprojectorData.root = root;\n\t\t},\n\n\t\tget root(): Element {\n\t\t\tconst projectorData = projectorDataMap.get(this);\n\t\t\treturn projectorData && projectorData.root;\n\t\t},\n\n\t\tget projector(): MaquetteProjector {\n\t\t\treturn projectorDataMap.get(this).projector;\n\t\t},\n\n\t\tget document(): Document {\n\t\t\tconst projectorData = projectorDataMap.get(this);\n\t\t\treturn projectorData && projectorData.root && projectorData.root.ownerDocument;\n\t\t},\n\n\t\tget state(): ProjectorState {\n\t\t\tconst projectorData = projectorDataMap.get(this);\n\t\t\treturn projectorData && projectorData.state;\n\t\t}\n\t})\n\t.mixin({\n\t\tmixin: createVNodeEvented,\n\t\tinitialize(instance) {\n\t\t\t/* We have to stub out listeners for Maquette, otherwise it won't allow us to change them down the road */\n\t\t\tinstance.on('touchend', function () {});\n\t\t\tinstance.on('touchmove', function () {});\n\t\t}\n\t})\n\t.mixin({\n\t\tmixin: createParentMixin,\n\t\tinitialize(instance, options) {\n\t\t\tconst projector = createMaquetteProjector({});\n\t\t\tconst root = options && options.root || document.body;\n\t\t\tprojectorDataMap.set(instance, {\n\t\t\t\tprojector,\n\t\t\t\troot,\n\t\t\t\tstate: ProjectorState.Detached\n\t\t\t});\n\t\t\tif (options && options.autoAttach) {\n\t\t\t\tinstance.attach(options && options.append);\n\t\t\t}\n\t\t},\n\t\taspectAdvice: {\n\t\t\tafter: {\n\t\t\t\tclear(): void {\n\t\t\t\t\tconst projector: Projector = this;\n\t\t\t\t\tprojector.invalidate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\nconst defaultProjector: Projector = createProjector();\n\nexport default defaultProjector;\n"]}