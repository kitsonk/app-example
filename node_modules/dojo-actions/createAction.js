(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", 'dojo-compose/compose', 'dojo-compose/mixins/createStateful', 'dojo-core/async/Task', 'dojo-core/WeakMap'], factory);
    }
})(function (require, exports) {
    "use strict";
    var compose_1 = require('dojo-compose/compose');
    var createStateful_1 = require('dojo-compose/mixins/createStateful');
    var Task_1 = require('dojo-core/async/Task');
    var WeakMap_1 = require('dojo-core/WeakMap');
    /**
     * A type guard that validates the object passed is an Action
     */
    function isAction(value) {
        return typeof value === 'object' && typeof value.do === 'function';
    }
    exports.isAction = isAction;
    /**
     * A weak map of `do` methods
     */
    var doFunctions = new WeakMap_1.default();
    /**
     * A factory which creates instances of Action
     */
    var createAction = compose_1.default({
        do: function (options) {
            var action = this;
            var doFn = doFunctions.get(action);
            if (doFn && action.state.enabled) {
                var result = doFn.call(action, options);
                return Task_1.isTask(result) ? result : Task_1.default.resolve(result);
            }
            return Task_1.default.resolve();
        },
        enable: function () {
            var action = this;
            if (!action.state.enabled) {
                action.setState({ enabled: true });
            }
        },
        disable: function () {
            var action = this;
            if (action.state.enabled) {
                action.setState({ enabled: false });
            }
        }
    })
        .mixin({
        mixin: createStateful_1.default,
        initialize: function (instance, options) {
            if (!options || !options.do) {
                throw new TypeError("'options.do' required during creation.");
            }
            doFunctions.set(instance, options.do);
            instance.setState({ enabled: 'enabled' in options ? options.enabled : true });
            instance.own({
                destroy: function () {
                    doFunctions.delete(instance);
                }
            });
        }
    });
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = createAction;
});
//# sourceMappingURL=_debug/createAction.js.map